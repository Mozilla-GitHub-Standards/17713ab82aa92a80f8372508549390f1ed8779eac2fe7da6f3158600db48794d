# Globally define configuration
init_by_lua_file "/usr/local/openresty/nginx/conf/conf.d/server.lua";

server {
  listen       8080;
  root         /dev/null;
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root       /usr/local/openresty/nginx/html/;
  }
  # LUA / Access Proxy settings
  set_by_lua_block $backend { return os.getenv("backend") }
  set_by_lua_block $httpsredir { if (os.getenv("httpsredir") ~= 'no') and (ngx.var.http_x_forwarded_proto ~= 'https') then return "yes" else return "no" end}
  set_by_lua_block $sessionsecret { return os.getenv("sessionsecret") }

  # Bypass authentication for certain locations (DANGEROUS!)
  # include conf.d/proxy_auth_bypass.conf;

  location = /health {
    return 200;
    access_log off;
  }

  # Default location, will enforce authentication there
  location / {
    # Ensure we get traffic from an ELB that listens over HTTPS
#    if ($httpsredir != 'no') {
#      rewrite ^ https://$host$request_uri? permanent;
#    }

#    proxy_set_header "X-Forwarded-Proto" "https";
#    proxy_set_header "X-Forwarded-Port" "443";
    proxy_set_header "X-Forwarded-For" $proxy_add_x_forwarded_for;
    proxy_set_header "X-Real-IP" $remote_addr;
    proxy_set_header "Host" $host;
    access_by_lua_file "/usr/local/openresty/nginx/conf/conf.d/pkce.lua";
    proxy_pass $backend;
  }
}
